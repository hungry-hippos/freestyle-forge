{"version":3,"sources":["appFiles/keyboardFunctionalityWordLab.js","appFiles/keyboardFunctionalityFlow.js","appFiles/verseBank.js","appFiles/gameFunctionality.js","appFiles/TextEditor.js","appFiles/HUD.js","images/sidewaysGold.PNG","appFiles/Navbar.js","images/another.PNG","images/wordLab.PNG","images/fluidFlow.PNG","appFiles/Home.js","appFiles/FlowEditor.js","appFiles/FlowHUD.js","App.js","reportWebVitals.js","index.js"],"names":["getRhymesFromAPI","word","rhymes","fetch","then","res","json","i","length","push","col2","document","getElementById","textContent","col1","rhymeData","createElement","classList","add","appendChild","remove","getSpelledLikeFromAPI","sp","getSoundsLikeFromAPI","sl","wordData","getRelatedFromAPI","data","getSynonymsFromAPI","getAntonymsFromAPI","getApproxRhymesFromAPI","getConsonantMatchFromAPI","hideAllShruggers","allShruggers","getElementsByClassName","getWordAndSendAPIReq","event","target","addEventListener","keyboardFunctionalityWordLab","key","code","lines","lastLineWords","childNodes","line","window","scrollTo","body","scrollHeight","words","lastWord","lastWordText","reducedWord","allLines","lastLineChildren","preventDefault","slice","sendAPIReq","keyboardFunctionalityFlow","objDiv","scrollTop","verseBank","gameFunctionality","isWordsMoving","firstVerse","firstVerseChar","intervalCode","moveIntervalCode","getLastWord","allWords","typeFirstVerse","setInterval","evt","KeyboardEvent","dispatchEvent","clearInterval","getRootRhymes","eraseLastWord","getLongWords","longWords","shuffleArr","arr","num","Math","round","random","temp","getAPIData","type","wordPtr","allLanes","rhymeWords","containerDiv","wordDiv","lengthDiv","lanes","rhymePair","stackRhyme","stackRoot","moveFromStackToLane","rhymePairs","rhyme","root","rhymeLanes","freq","parseInt","runningWord","laneColor","contains","setAttribute","moveWords","allRunners","posLeft","offsetLeft","offsetWidth","style","left","stackPairs","reloadRootRhymesAndStack","setTimeout","startWordSpawnInterval","listener","runningWords","getAttribute","loadListener","resetEverything","removeEventListener","TextEditor","useEffect","id","fontWeight","display","fontSize","className","chooseMode","mode","clickedBtn","isClicked","toggle","displayId","blur","toggleHUD","NoMatches","props","HUD","Button","variant","onClick","Navbar","setters","setShowHome","setShowLab","setShowFlow","changeSite","btns","src","freestyleForgeLogo","alt","Home","openComponent","click","appDemos","Fragment","freestyleLog","wordLabImg","fluidFLowImg","FlowEditor","FlowHUD","textAlign","marginBottom","WordLab","Homesite","FluidFlow","App","useState","showHome","showLab","showFlow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mVACMA,EAAiB,SAACC,GACpB,IAAIC,EAAO,GACXC,MAAM,0CAA0CF,GAC3CG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBL,EAAOO,KAAKJ,EAAIE,GAAGN,MAEvB,OAAOC,KAEVE,MAAK,SAACC,GAGH,IAAMK,EAAKC,SAASC,eAAe,qBACnCF,EAAKG,YAAY,GACjB,IAAMC,EAAKH,SAASC,eAAe,qBAInC,GAHAE,EAAKD,YAAY,GAGA,IAAbR,EAAIG,OAAR,CAMA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMQ,EAAUJ,SAASK,cAAc,OACvCD,EAAUE,UAAUC,IAAI,YACxBH,EAAUF,YAAYR,EAAIE,GAC1BO,EAAKK,YAAYJ,GAGrB,IAAK,IAAIR,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMQ,EAAUJ,SAASK,cAAc,OACvCD,EAAUE,UAAUC,IAAI,YACxBH,EAAUF,YAAYR,EAAIE,GAC1BG,EAAKS,YAAYJ,SAtBjBJ,SAASC,eAAe,0BAA0BK,UAAUG,OAAO,cA0B7EC,EAAsB,SAACpB,GACzB,IAAIqB,EAAG,GACPnB,MAAM,qCAAqCF,GACtCG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBe,EAAGb,KAAKJ,EAAIE,GAAGN,MAEnB,OAAOqB,KAEVlB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,0BACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,0BAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMQ,EAAUJ,SAASK,cAAc,OACvCD,EAAUE,UAAUC,IAAI,YACxBH,EAAUF,YAAYR,EAAIE,GAC1BO,EAAKK,YAAYJ,GAGrB,IAAK,IAAIR,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMQ,EAAUJ,SAASK,cAAc,OACvCD,EAAUE,UAAUC,IAAI,YACxBH,EAAUF,YAAYR,EAAIE,GAC1BG,EAAKS,YAAYJ,SArBjBJ,SAASC,eAAe,+BAA+BK,UAAUG,OAAO,cAyBlFG,EAAqB,SAACtB,GACxB,IAAIuB,EAAG,GACPrB,MAAM,qCAAqCF,GACtCG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBiB,EAAGf,KAAKJ,EAAIE,GAAGN,MAEnB,OAAOuB,KAEVpB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,yBACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,yBAEnC,GADAF,EAAKG,YAAY,GACA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,8BAA8BK,UAAUG,OAAO,cAyBjFM,EAAkB,SAACzB,GACrB,IAAI0B,EAAK,GACTxB,MAAM,qCAAqCF,GACtCG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,sBACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,sBAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,2BAA2BK,UAAUG,OAAO,cAyB9EQ,EAAmB,SAAC3B,GACtB,IAAI0B,EAAK,GACTxB,MAAM,0CAA0CF,GAC3CG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,uBACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,uBAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,4BAA4BK,UAAUG,OAAO,cAyB/ES,EAAmB,SAAC5B,GACtB,IAAI0B,EAAK,GACTxB,MAAM,0CAA0CF,GAC3CG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,uBACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,uBAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,4BAA4BK,UAAUG,OAAO,cAyB/EU,EAAuB,SAAC7B,GAC1B,IAAI0B,EAAK,GACTxB,MAAM,0CAA0CF,GAC3CG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,2BACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,2BAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,gCAAgCK,UAAUG,OAAO,cAyBnFW,EAAyB,SAAC9B,GAC5B,IAAI0B,EAAK,GACTxB,MAAM,0CAA0CF,GAC3CG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GAEH,IAAMS,EAAKH,SAASC,eAAe,6BACnCE,EAAKD,YAAY,GACjB,IAAMH,EAAKC,SAASC,eAAe,6BAGnC,GAFAF,EAAKG,YAAY,GAEA,IAAbR,EAAIG,OAAR,CAKA,IAAK,IAAID,EAAE,EAAEA,EAAE,GACPA,IAAIF,EAAIG,OADCD,IAAI,CAIjB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBO,EAAKK,YAAYM,GAGrB,IAAK,IAAIlB,EAAE,EAAEA,EAAE,MACPA,GAAGF,EAAIG,QADGD,IAAI,CAIlB,IAAMkB,EAASd,SAASK,cAAc,OACtCS,EAASR,UAAUC,IAAI,YACvBO,EAASZ,YAAYR,EAAIE,GACzBG,EAAKS,YAAYM,SArBjBd,SAASC,eAAe,kCAAkCK,UAAUG,OAAO,cA0BrFY,EAAiB,WAEnB,IADA,IAAMC,EAAatB,SAASuB,uBAAuB,aAC1C3B,EAAE,EAAEA,EAAE0B,EAAazB,OAAOD,IAC/B0B,EAAa1B,GAAGU,UAAUC,IAAI,WAIhCiB,EAAqB,SAACC,GAExBA,EAAMC,OAAOpB,UAAUC,IAAI,UAC3BkB,EAAMC,OAAOC,iBAAiB,cAAa,SAACF,GACxCA,EAAMC,OAAOpB,UAAUG,OAAO,aAGlC,IAAMnB,EAAKmC,EAAMC,OAAOxB,YACxBmB,IACAhC,EAAiBC,GACjBoB,EAAsBpB,GACtBsB,EAAqBtB,GACrByB,EAAkBzB,GAClB2B,EAAmB3B,GACnB4B,EAAmB5B,GACnB6B,EAAuB7B,GACvB8B,EAAyB9B,IA4GdsC,EA7FoB,SAACH,GAKhC,GAFAzB,SAASuB,uBAAuB,QAAQ,GAAGI,iBAAiB,aAAaH,GAEzD,UAAZC,EAAMI,KAA6B,aAAZJ,EAAMI,KAAgC,cAAZJ,EAAMI,KAAiC,eAAZJ,EAAMI,KAAkC,YAAZJ,EAAMI,KAA+B,cAAZJ,EAAMI,IAA3I,CAKA,GAAiB,UAAbJ,EAAMK,KAAe,CAErB,IAAMC,EAAM/B,SAASuB,uBAAuB,aAEtCS,EADSD,EAAMA,EAAMlC,OAAO,GACLoC,WAE7B,GAA2B,IAAvBD,EAAcnC,QAA6C,KAA/BmC,EAAc,GAAG9B,YAC7C,OAGJ,IAAMgC,EAAKlC,SAASK,cAAc,OAClC6B,EAAK5B,UAAUC,IAAI,aACnB,IAAMjB,EAAKU,SAASK,cAAc,OAOlC,OANAf,EAAKgB,UAAUC,IAAI,QACnBjB,EAAKqC,iBAAiB,aAAaH,GACnCU,EAAK1B,YAAYlB,GACjBU,SAASC,eAAe,YAAYO,YAAY0B,QAEhDC,OAAOC,SAAS,EAAEpC,SAASqC,KAAKC,cAIpC,GAAiB,UAAbb,EAAMK,KA8BV,GAAiB,cAAbL,EAAMK,KAAV,CA0BA,IAAMS,EAAMvC,SAASuB,uBAAuB,QAC5CgB,EAAMA,EAAM1C,OAAO,GAAGK,YAAYqC,EAAMA,EAAM1C,OAAO,GAAGK,YAAYuB,EAAMI,QA3B1E,CAMI,IAJA,IAAMU,EAAMvC,SAASuB,uBAAuB,QACtCiB,EAASD,EAAMA,EAAM1C,OAAO,GAC5B4C,EAAaD,EAAStC,YACxBwC,EAAY,GACP9C,EAAE,EAAEA,EAAE6C,EAAa5C,OAAO,EAAED,IACjC8C,GAAaD,EAAa7C,GAG9B,GAAkB,KAAd8C,GAAmC,IAAfH,EAAM1C,OAAW,CACrC2C,EAAS/B,SACT,IAAIkC,EAAS3C,SAASuB,uBAAuB,aACvCqB,EAAiBD,EAASA,EAAS9C,OAAO,GAAGoC,WAC/CU,EAAS9C,OAAO,GAA+B,IAA1B+C,EAAiB/C,QACtC8C,EAASA,EAAS9C,OAAO,GAAGY,cAGhC+B,EAAStC,YAAYwC,MAhD7B,CAEIjB,EAAMoB,iBAGN,IAAMN,EAAMvC,SAASuB,uBAAuB,QACxCkB,EAAaF,EAAMA,EAAM1C,OAAO,GAAGK,YACvC,GAAmB,KAAfuC,EACA,OAGJ,OADeA,EAAaA,EAAa5C,OAAO,IAE5C,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IACrC4C,EAAaA,EAAaK,MAAM,GAAG,IA1DlC,SAACxD,GACd+B,IACAhC,EAAiBC,GACjBoB,EAAsBpB,GACtBsB,EAAqBtB,GACrByB,EAAkBzB,GAClB2B,EAAmB3B,GACnB4B,EAAmB5B,GACnB6B,EAAuB7B,GACvB8B,EAAyB9B,GAwDrByD,CAAWN,GAEX,IAAMnD,EAAKU,SAASK,cAAc,OAClCf,EAAKgB,UAAUC,IAAI,QACnBjB,EAAKqC,iBAAiB,aAAaH,GACnC,IAAMO,EAAM/B,SAASuB,uBAAuB,aAC5CQ,EAAMA,EAAMlC,OAAO,GAAGW,YAAYlB,MCnW3B0D,EAxFiB,SAACvB,GAE7B,GAAgB,UAAZA,EAAMI,KAA6B,aAAZJ,EAAMI,KAAgC,cAAZJ,EAAMI,KAAiC,eAAZJ,EAAMI,KAAkC,YAAZJ,EAAMI,KAA+B,cAAZJ,EAAMI,IAK3I,GAAiB,UAAbJ,EAAMK,KAwBV,GAAiB,UAAbL,EAAMK,KA0BV,GAAiB,cAAbL,EAAMK,KAAV,CA0BA,IAAMS,EAAMvC,SAASuB,uBAAuB,YAC5CgB,EAAMA,EAAM1C,OAAO,GAAGK,YAAYqC,EAAMA,EAAM1C,OAAO,GAAGK,YAAYuB,EAAMI,QA3B1E,CAMI,IAJA,IAAMU,EAAMvC,SAASuB,uBAAuB,YACtCiB,EAASD,EAAMA,EAAM1C,OAAO,GAC5B4C,EAAaD,EAAStC,YACxBwC,EAAY,GACP9C,EAAE,EAAEA,EAAE6C,EAAa5C,OAAO,EAAED,IACjC8C,GAAaD,EAAa7C,GAG9B,GAAkB,KAAd8C,GAAmC,IAAfH,EAAM1C,OAAW,CACrC2C,EAAS/B,SACT,IAAIkC,EAAS3C,SAASuB,uBAAuB,iBACvCqB,EAAiBD,EAASA,EAAS9C,OAAO,GAAGoC,WAC/CU,EAAS9C,OAAO,GAA+B,IAA1B+C,EAAiB/C,QACtC8C,EAASA,EAAS9C,OAAO,GAAGY,cAGhC+B,EAAStC,YAAYwC,MA5C7B,CAEIjB,EAAMoB,iBAGN,IAAMN,EAAMvC,SAASuB,uBAAuB,YACxCkB,EAAaF,EAAMA,EAAM1C,OAAO,GAAGK,YACvC,GAAmB,KAAfuC,EACA,OAGJ,OADeA,EAAaA,EAAa5C,OAAO,IAE5C,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IACrC4C,EAAaA,EAAaK,MAAM,GAAG,GAM3C,IAAMxD,EAAKU,SAASK,cAAc,OAClCf,EAAKgB,UAAUC,IAAI,YACnB,IAAMwB,EAAM/B,SAASuB,uBAAuB,iBAC5CQ,EAAMA,EAAMlC,OAAO,GAAGW,YAAYlB,OA9CtC,CAEI,IAAMyC,EAAM/B,SAASuB,uBAAuB,iBAEtCS,EADSD,EAAMA,EAAMlC,OAAO,GACLoC,WAE7B,GAA2B,IAAvBD,EAAcnC,QAA6C,KAA/BmC,EAAc,GAAG9B,YAC7C,OAGJ,IAAMgC,EAAKlC,SAASK,cAAc,OAClC6B,EAAK5B,UAAUC,IAAI,iBACnB,IAAMjB,EAAKU,SAASK,cAAc,OAClCf,EAAKgB,UAAUC,IAAI,YACnB2B,EAAK1B,YAAYlB,GACjBU,SAASC,eAAe,gBAAgBO,YAAY0B,GAGpD,IAAIe,EAASjD,SAASC,eAAe,gBACrCgD,EAAOC,UAAYD,EAAOX,e,wBClBnBa,EATC,CACZ,mEACA,8DACA,sEACA,gEACA,iEACA,qECJAC,EAAkB,CAClBC,eAAc,EACdC,WAAW,GACXC,eAAe,EACfC,aAAa,EACbC,iBAAiB,EACjBC,YANkB,WAOd,IAAMC,EAAS3D,SAASuB,uBAAuB,YAC/C,OAAOoC,EAASA,EAAS9D,OAAO,GAAGK,aAEvC0D,eAVkB,WAWdR,EAAkBI,aAAaK,aAAY,WACvC,KAAMT,EAAkBG,eAAeH,EAAkBE,WAAWzD,QAAO,CACvE,GAAqE,MAAjEuD,EAAkBE,WAAWF,EAAkBG,gBAAsB,CACrE,IAAMO,EAAM,IAAIC,cAAc,UAAW,CAACjC,KAAK,UAC/CK,OAAO6B,cAAcF,OACpB,CACD,IAAMA,EAAM,IAAIC,cAAc,UAAW,CAAClC,IAAIuB,EAAkBE,WAAWF,EAAkBG,kBAC7FpB,OAAO6B,cAAcF,GAGzBV,EAAkBG,iBAClB,MAEJ,GAAIH,EAAkBG,gBAAgBH,EAAkBE,WAAWzD,OAAO,CACtE,IAAIiE,EAAM,IAAIC,cAAc,UAAW,CAACjC,KAAK,UAC7CK,OAAO6B,cAAcF,GACrBG,cAAcb,EAAkBI,cAChCJ,EAAkBG,eAAe,EACjCH,EAAkBc,mBAExB,KAINC,cAnCkB,WAoCd,IAAIR,EAAS3D,SAASuB,uBAAuB,YAC7CoC,EAASA,EAAS9D,OAAO,GAAGK,YAAY,IAE5CkE,aAvCkB,WA0Cd,IAFA,IAAIT,EAAS3D,SAASuB,uBAAuB,YACzC8C,EAAU,GACLzE,EAAE,EAAEA,EAAE+D,EAAS9D,OAAOD,IACvB+D,EAAS/D,GAAGM,YAAYL,QAAQ,GAChCwE,EAAUvE,KAAK6D,EAAS/D,IAGhC,OAAOyE,GAEXC,WAjDkB,SAiDPC,GACP,IAAK,IAAI3E,EAAE,EAAEA,EAAE2E,EAAI1E,OAAOD,IAAI,CAC1B,IAAM4E,EAAIC,KAAKC,MAAMD,KAAKE,UAAUJ,EAAI1E,OAAO,IAC3C+E,EAAKL,EAAI3E,GACb2E,EAAI3E,GAAG2E,EAAIC,GACXD,EAAIC,GAAKI,EAEb,OAAOL,GAELM,WA1DY,SA0DDC,EAAKC,GAAS,OAAD,+GAEnBD,EAFmB,OAGjB,UAHiB,6BAIlBA,EAAK,WAJa,6DAStB9D,EAAK,GACTxB,MAAM,kCAAkCsF,EAAKC,EAAQ7E,aAChDT,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACC,GACH,IAAK,IAAIE,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACtBoB,EAAKlB,KAAKJ,EAAIE,GAAGN,MAErB,OAAO0B,KAEVvB,MAAK,SAACC,GACH,GAAIA,EAAIG,OAAO,EAAE,CAEb,GAAIG,SAASuB,uBAAuB,aAAa1B,QAAQ,EACrD,OAIJ,IADA,IAAImF,EAAShF,SAASuB,uBAAuB,aACpC3B,EAAE,EAAEA,EAAEoF,EAASnF,OAAOD,IAC3B,GAAIoF,EAASpF,GAAGqC,WAAW,GAAG/B,cAAc6E,EAAQ7E,YAChD,OAIR,IAAMsE,EAAIC,KAAKC,MAAoB,EAAdD,KAAKE,UAAY,EAClCM,EAAW,GACf,IAASrF,EAAE,EAAEA,EAAE4E,EAAI5E,IACfqF,EAAWnF,KAAKJ,EAAIE,IAIxB,IAAMsF,EAAalF,SAASK,cAAc,OAC1C6E,EAAa5E,UAAUC,IAAI,aAC3B,IAAM4E,EAAQnF,SAASK,cAAc,OACrC8E,EAAQ7E,UAAUC,IAAI,YACtB4E,EAAQjF,YAAY6E,EAAQ7E,YAC5B,IAAMkF,EAAUpF,SAASK,cAAc,OACvC+E,EAAU9E,UAAUC,IAAI,YACxB6E,EAAUlF,YAAY+E,EAAWpF,OACjCqF,EAAa1E,YAAY2E,GACzBD,EAAa1E,YAAY4E,GACzBpF,SAASC,eAAe,cAAcO,YAAY0E,GAElD,IAAMG,EAAMrF,SAASuB,uBAAuB,aACzB,IAAf8D,EAAMxF,QACNqF,EAAa5E,UAAUC,IAAI,aAC3BwE,EAAQzE,UAAUC,IAAI,cACD,IAAf8E,EAAMxF,QACZqF,EAAa5E,UAAUC,IAAI,WAC3BwE,EAAQzE,UAAUC,IAAI,YACD,IAAf8E,EAAMxF,SACZqF,EAAa5E,UAAUC,IAAI,YAC3BwE,EAAQzE,UAAUC,IAAI,aAI1B,IAASX,EAAE,EAAEA,EAAEqF,EAAWpF,OAAOD,IAAI,CACjC,IAAM0F,EAAUtF,SAASK,cAAc,OACvCiF,EAAUhF,UAAUC,IAAI,aACxB,IAAMgF,EAAWvF,SAASK,cAAc,OACxCkF,EAAWjF,UAAUC,IAAI,cACzBgF,EAAWrF,YAAY+E,EAAWrF,GAClC,IAAM4F,EAAUxF,SAASK,cAAc,OACvCmF,EAAUlF,UAAUC,IAAI,aACxBiF,EAAUtF,YAAY6E,EAAQ7E,YAE9BoF,EAAU9E,YAAY+E,GACtBD,EAAU9E,YAAYgF,GACtBxF,SAASC,eAAe,eAAeO,YAAY8E,GAGvDP,EAAQzE,UAAUC,IAAI,YA/ER,8CAoF9B2D,cA9IkB,WA+Id,IAAIG,EAAUjB,EAAkBgB,eAChCC,EAAUjB,EAAkBkB,WAAWD,GACvC,IAAK,IAAIzE,EAAE,EAAEA,EAAEyE,EAAUxE,OAAOD,IAC5BwD,EAAkByB,WAAW,QAAQR,EAAUzE,KAGvD6F,oBArJkB,WAsJd,IAAIC,EAAW1F,SAASuB,uBAAuB,aAC/C,GAAwB,IAApBmE,EAAW7F,OAAf,CAMA,IAAM2E,EAAIC,KAAKC,MAAMD,KAAKE,UAAUe,EAAW7F,OAAO,IAChD8F,EAAMD,EAAWlB,GAAKvC,WAAW,GAAG/B,YACpC0F,EAAKF,EAAWlB,GAAKvC,WAAW,GAAG/B,YACzCwF,EAAWlB,GAAK/D,SAIhB,IADA,IAAMoF,EAAW7F,SAASuB,uBAAuB,aACxC3B,EAAE,EAAEA,EAAEiG,EAAWhG,OAAOD,IAC7B,GAAIiG,EAAWjG,GAAGqC,WAAW,GAAG/B,cAAc0F,EAAK,CAC/C,IAAIE,EAAKC,SAASF,EAAWjG,GAAGqC,WAAW,GAAG/B,YAAY,IAAI,EAC9D2F,EAAWjG,GAAGqC,WAAW,GAAG/B,YAAY4F,EACxC,IAAME,EAAYhG,SAASK,cAAc,OACzC2F,EAAY9F,YAAYyF,EACxBK,EAAY1F,UAAUC,IAAI,eAC1BsF,EAAWjG,GAAGY,YAAYwF,GAG1B,IAAIC,EAAU,GACVJ,EAAWjG,GAAGU,UAAU4F,SAAS,WACjCD,EAAU,UACJJ,EAAWjG,GAAGU,UAAU4F,SAAS,YACvCD,EAAU,WACJJ,EAAWjG,GAAGU,UAAU4F,SAAS,eACvCD,EAAU,aAEdD,EAAY1F,UAAUC,IAAI0F,GAC1BD,EAAYG,aAAa,YAAYF,GACrC,YAhCJhC,cAAcb,EAAkBI,eAoCxC4C,UA5LkB,WA6LVhD,EAAkBC,gBAGlBD,EAAkBC,eAAc,EAGpCD,EAAkBK,iBAAiBI,aAAY,WAG3C,IAFA,IAAIwC,EAAWrG,SAASuB,uBAAuB,eAC3C3B,EAAE,EACAA,EAAEyG,EAAWxG,QAAO,CACtB,IAAIyG,EAAQP,SAASM,EAAWzG,GAAG2G,WAAW,IACjC,KAAKD,EAAQD,EAAWzG,GAAG4G,aAC1B,GACVH,EAAWzG,GAAGa,UAGlB6F,GAAS,EACTD,EAAWzG,GAAG6G,MAAMC,KAAKJ,EAAQ,KACjC1G,KAGJ,IAAM+G,EAAW3G,SAASuB,uBAAuB,aACzB,IAApB8E,EAAWxG,QAAkC,IAApB8G,EAAW9G,SACpCoE,cAAcb,EAAkBK,kBAChCL,EAAkBC,eAAc,EAChCD,EAAkBwD,8BAExB,MAENA,yBA1NkB,WA6Nd,IADA,IAAIvB,EAAMrF,SAASuB,uBAAuB,aACpC8D,EAAMxF,OAAO,GACfwF,EAAM,GAAG5E,SAIbwD,cAAcb,EAAkBI,cAGhCJ,EAAkBc,gBAClB2C,YAAW,WACPzD,EAAkB0D,yBAClB1D,EAAkBgD,cACpB,MAENU,uBA3OkB,WA6Od1D,EAAkBqC,sBAClBrC,EAAkBgD,YAElBhD,EAAkBI,aAAaK,aAAY,WACvC,IAAMW,EAAgC,IAA5BC,KAAKC,MAAoB,EAAdD,KAAKE,UAC1BkC,YAAW,WAEP,GAAuB,IADP7G,SAASuB,uBAAuB,aAClC1B,OAGV,OAFAoE,cAAcb,EAAkBI,mBAChCJ,EAAkBI,aAAa,GAInCJ,EAAkBqC,wBACpBjB,KACJ,MAENuC,SA9PkB,SA8PTtF,GACL,IAAMe,EAASY,EAAkBM,cACjC,GAAe,SAAXlB,EAAkB,CAClBY,EAAkBe,gBAClB,IAAMK,EAAIC,KAAKC,MAAMD,KAAKE,UAAUxB,EAAUtD,OAAO,IACrDuD,EAAkBE,WAAWH,EAAUqB,GACvCpB,EAAkBQ,iBAEP,OAAXpB,IACAY,EAAkBe,gBAClBf,EAAkB0D,0BAGtB,IADA,IAAME,EAAahH,SAASuB,uBAAuB,eAC1C3B,EAAE,EAAEA,EAAEoH,EAAanH,OAAOD,IAC/B,GAAI4C,IAAWwE,EAAapH,GAAGM,YAAY,CAEvC,IAAM+F,EAAUe,EAAapH,GAAGqH,aAAa,aACvCtD,EAAS3D,SAASuB,uBAAuB,YAC/CoC,EAASA,EAAS9D,OAAO,GAAGS,UAAUC,IAAI0F,GAC1CtC,EAASA,EAAS9D,OAAO,GAAGS,UAAUC,IAAI,QAG1CyG,EAAapH,GAAGa,WAO5ByG,aA3RkB,WA4Rd/E,OAAOR,iBAAiB,UAAUyB,EAAkB2D,WAExDI,gBA9RkB,WA+RdlD,cAAcb,EAAkBI,cAChCS,cAAcb,EAAkBK,kBAChCtB,OAAOiF,oBAAoB,UAAUhE,EAAkB2D,UACvD3D,EAAkBC,eAAc,EAChCD,EAAkBE,WAAW,GAC7BF,EAAkBG,eAAe,IAI1BH,I,eCxQAiE,EA5BE,WAYb,OAXAC,qBAAU,WAENlE,EAAkB+D,kBAClBhF,OAAOiF,oBAAoB,UAAUxF,GACrCO,OAAOiF,oBAAoB,UAAUpE,GAIrCb,OAAOR,iBAAiB,UAAUC,MAG/B,sBAAK2F,GAAG,iBAAR,UACH,sBAAKA,GAAG,eAAR,UACI,sBAAMd,MAAO,CAACe,WAAW,OAAOC,QAAQ,QAAQC,SAAS,QAAzD,0BADJ,iEAEkE,uBAFlE,iFAGkF,uBAHlF,uEAMA,qBAAKH,GAAG,WAAR,SACI,qBAAKI,UAAU,YAAf,SACI,qBAAKA,UAAU,iB,eCtBzBC,G,MAAW,SAACC,GACd,IAAIC,EAAW9H,SAASuB,uBAAuB,cACzCwG,EAAU/H,SAASC,eAAe4H,GAAMvH,UAAU4F,SAAS,cAEjE,GAAwB,IAApB4B,EAAWjI,SAAekI,EAAU,CACpC,IAAIR,EAAGO,EAAW,GAAGb,aAAa,MAClCM,GAAI,UACJvH,SAASC,eAAesH,GAAIjH,UAAU0H,OAAO,UAC7CF,EAAW,GAAGxH,UAAUG,OAAO,cAEnCT,SAASC,eAAe4H,GAAMvH,UAAU0H,OAAO,cAC/C,IAAMC,EAAUJ,EAAK,UACrB7H,SAASC,eAAegI,GAAW3H,UAAU0H,OAAO,UAEpDhI,SAASC,eAAe4H,GAAMK,SAG5BC,EAAU,WAEZnI,SAASC,eAAe,WAAWK,UAAU0H,OAAO,UACpDhI,SAASC,eAAe,aAAaK,UAAU0H,OAAO,UACtDhI,SAASC,eAAe,OAAOK,UAAU0H,OAAO,MAChDhI,SAASC,eAAe,cAAciI,QAGpCE,EAAU,SAACC,GAEb,OAAO,sBAAKV,UAAU,mBAAmBJ,GAAIc,EAAMd,GAA5C,UACH,sBAAMd,MAAO,CAACiB,SAAS,QAAvB,8BAAuD,uBADpD,4BAsEIY,EAhEL,WACN,OAAO,sBAAKf,GAAG,MAAR,UACH,sBAAKI,UAAU,aAAaJ,GAAG,aAA/B,UACI,qBAAKI,UAAU,eAAf,oBACA,qBAAKJ,GAAG,oBAAoBI,UAAU,eACtC,qBAAKJ,GAAG,oBAAoBI,UAAU,eACtC,cAAE,EAAF,CAAYJ,GAAG,8BAEnB,sBAAKI,UAAU,aAAaJ,GAAG,gBAA/B,UACI,qBAAKI,UAAU,eAAf,2BACA,qBAAKJ,GAAG,0BAA0BI,UAAU,eAC5C,qBAAKJ,GAAG,0BAA0BI,UAAU,eAC5C,cAAE,EAAF,CAAYJ,GAAG,oCAEnB,sBAAKI,UAAU,aAAaJ,GAAG,YAA/B,UACI,qBAAKI,UAAU,eAAf,yBACA,qBAAKJ,GAAG,wBAAwBI,UAAU,eAC1C,qBAAKJ,GAAG,wBAAwBI,UAAU,eAC1C,cAAE,EAAF,CAAYJ,GAAG,kCAEnB,sBAAKI,UAAU,oBAAoBJ,GAAG,aAAtC,UACI,qBAAKI,UAAU,eAAf,0BACA,qBAAKJ,GAAG,yBAAyBI,UAAU,eAC3C,qBAAKJ,GAAG,yBAAyBI,UAAU,eAC3C,cAAE,EAAF,CAAYJ,GAAG,mCAEnB,sBAAKI,UAAU,oBAAoBJ,GAAG,aAAtC,UACI,qBAAKI,UAAU,eAAf,qBACA,qBAAKJ,GAAG,qBAAqBI,UAAU,eACvC,qBAAKJ,GAAG,qBAAqBI,UAAU,eACvC,cAAE,EAAF,CAAYJ,GAAG,+BAEnB,sBAAKI,UAAU,oBAAoBJ,GAAG,aAAtC,UACI,qBAAKI,UAAU,eAAf,sBACA,qBAAKJ,GAAG,sBAAsBI,UAAU,eACxC,qBAAKJ,GAAG,sBAAsBI,UAAU,eACxC,cAAE,EAAF,CAAYJ,GAAG,gCAEnB,sBAAKI,UAAU,oBAAoBJ,GAAG,aAAtC,UACI,qBAAKI,UAAU,eAAf,sBACA,qBAAKJ,GAAG,sBAAsBI,UAAU,eACxC,qBAAKJ,GAAG,sBAAsBI,UAAU,eACxC,cAAE,EAAF,CAAYJ,GAAG,gCAEnB,sBAAKI,UAAU,oBAAoBJ,GAAG,YAAtC,UACI,qBAAKI,UAAU,eAAf,6BACA,qBAAKJ,GAAG,4BAA4BI,UAAU,eAC9C,qBAAKJ,GAAG,4BAA4BI,UAAU,eAC9C,cAAE,EAAF,CAAYJ,GAAG,sCAEnB,sBAAKA,GAAG,UAAR,UACI,cAACgB,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,wBAAwBJ,GAAG,MAAMkB,QAAS,WAAKb,EAAW,QAApG,oBACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,wBAAwBJ,GAAG,SAASkB,QAAS,WAAKb,EAAW,WAAvG,4BACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,wBAAwBJ,GAAG,KAAKkB,QAAS,WAAKb,EAAW,OAAnG,yBACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,MAAMkB,QAAS,WAAKb,EAAW,QAAzF,0BACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,MAAMkB,QAAS,WAAKb,EAAW,QAAzF,qBACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,MAAMkB,QAAS,WAAKb,EAAW,QAAzF,sBACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,MAAMkB,QAAS,WAAKb,EAAW,QAAzF,sBACA,cAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,KAAKkB,QAAS,WAAKb,EAAW,OAAxF,6BACA,eAACW,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,aAAaJ,GAAG,aAAakB,QAASN,EAAhF,UAA4F,cAAC,IAAD,CAAoBZ,GAAG,YAAY,cAAC,IAAD,CAAsBA,GAAG,YAAYI,UAAU,qBCjG3K,MAA0B,yCC2C1Be,G,MAtCF,SAACL,GAAS,IAAD,cACyBA,EAAMM,QAD/B,GACXC,EADW,KACCC,EADD,KACYC,EADZ,KAGZC,EAAW,SAAClH,GACd+G,GAAY,GACZC,GAAW,GACXC,GAAY,GAIZ,IADA,IAAME,EAAKhJ,SAASuB,uBAAuB,aAClC3B,EAAE,EAAEA,EAAEoJ,EAAKnJ,OAAOD,IACvBoJ,EAAKpJ,GAAGsI,OAGZ,OAAOrG,GACH,IAAK,OACD+G,GAAY,GACZ,MACJ,IAAK,MACDC,GAAW,GACX,MACJ,IAAK,OACDC,GAAY,KAMxB,OAAO,sBAAKvB,GAAG,SAAR,UACH,qBAAK0B,IAAKC,EAAoBC,IAAI,GAAG5B,GAAG,eACxC,sBAAKA,GAAG,aAAR,UACI,cAACgB,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,YAAYc,QAAS,WAAKM,EAAW,SAA/E,kBACA,cAACR,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,YAAYJ,GAAG,aAAakB,QAAS,WAAKM,EAAW,SAA/F,wBACA,cAACR,EAAA,EAAD,CAAQC,QAAQ,gBAAgBb,UAAU,YAAYJ,GAAG,YAAYkB,QAAS,WAAKM,EAAW,QAA9F,8BCtCG,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,sCCsE1BK,G,MAhEJ,WAEP,IAAMC,EAAc,SAACvE,GACjB,OAAOA,GACH,IAAK,YACD9E,SAASC,eAAe,cAAcqJ,QACtC,MACJ,IAAK,UACDtJ,SAASC,eAAe,aAAaqJ,UAyBjD,OAlBAhC,qBAAU,WAGN,IAAMiC,EAASvJ,SAASuB,uBAAuB,WAC/CgI,EAAS,GAAG5H,iBAAiB,cAAa,WACtC3B,SAASC,eAAe,mBAAmBK,UAAUC,IAAI,qBAE7DgJ,EAAS,GAAG5H,iBAAiB,cAAa,WACtC3B,SAASC,eAAe,mBAAmBK,UAAUG,OAAO,qBAEhE8I,EAAS,GAAG5H,iBAAiB,cAAa,WACtC3B,SAASC,eAAe,qBAAqBK,UAAUC,IAAI,qBAE/DgJ,EAAS,GAAG5H,iBAAiB,cAAa,WACtC3B,SAASC,eAAe,qBAAqBK,UAAUG,OAAO,wBAI/D,eAAC,IAAM+I,SAAP,WACH,qBAAKjC,GAAG,WAAR,SACI,qBAAK0B,IAAKQ,EAAcN,IAAI,GAAG5B,GAAG,mBAEtC,sBAAKA,GAAG,YAAR,UACI,sBAAKA,GAAG,iBAAR,2CACkC,uBADlC,2BAC+D,uBAD/D,+BACgG,uBADhG,+BACiI,uBADjI,kBAGA,sBAAKI,UAAU,UAAUc,QAAS,WAAKY,EAAc,YAArD,UACI,qBAAKJ,IAAKS,EAAYP,IAAI,GAAGxB,UAAU,YACvC,sBAAKA,UAAU,WAAWJ,GAAG,kBAA7B,UACI,qBAAKI,UAAU,eAAf,sBACA,sBAAKA,UAAU,cAAf,2GACkG,uBADlG,gCAKR,sBAAKA,UAAU,UAAUc,QAAS,WAAKY,EAAc,cAArD,UACI,qBAAKJ,IAAKU,EAAcR,IAAI,GAAGxB,UAAU,YACzC,sBAAKA,UAAU,WAAWJ,GAAG,oBAA7B,UACI,qBAAKI,UAAU,eAAf,wBACA,sBAAKA,UAAU,cAAf,4EACmE,uBAAK,uBADxE,4DCvBLiC,G,MA9BE,WAcb,OAVAtC,qBAAU,WAENlE,EAAkB+D,kBAClBhF,OAAOiF,oBAAoB,UAAUxF,GACrCO,OAAOiF,oBAAoB,UAAUpE,GAGrCb,OAAOR,iBAAiB,UAAUqB,GAClCI,EAAkB8D,kBAEf,qBAAKK,GAAG,iBAAR,SACH,sBAAKA,GAAG,eAAR,UACI,sBAAKA,GAAG,mBAAR,UACI,sBAAMd,MAAO,CAACe,WAAW,OAAOC,QAAQ,QAAQC,SAAS,QAAzD,0BADJ,qDAEsD,uBAFtD,oIAGqI,uBAHrI,+BAMA,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,sBCXhBkC,G,MAhBD,WAEV,OAAO,eAAC,IAAML,SAAP,WACP,sBAAKjC,GAAG,UAAR,UACI,qBAAKA,GAAG,gBAAR,SACI,oBAAId,MAAO,CAACiB,SAAS,OAAOoC,UAAU,SAASC,aAAa,QAA5D,2BAEJ,qBAAKxC,GAAG,eACR,qBAAKA,GAAG,iBAGZ,qBAAMA,GAAG,cAAcI,UAAU,gBCJ/BqC,G,YAAQ,WACZ,OAAO,eAAC,IAAMR,SAAP,WACL,cAAE,EAAF,IACA,cAAE,EAAF,SAIES,EAAS,WACb,OAAO,cAAC,EAAD,KAGHC,EAAU,WACd,OAAO,eAAC,IAAMV,SAAP,WACL,cAAE,EAAF,IACA,cAAE,EAAF,QAoBWW,MAff,WAAgB,IAAD,EACgBC,oBAAS,GADzB,mBACNC,EADM,KACGzB,EADH,OAEcwB,oBAAS,GAFvB,mBAENE,EAFM,KAEEzB,EAFF,OAGgBuB,oBAAS,GAHzB,mBAGNG,EAHM,KAKP5B,EAAQ,CAACC,EAAYC,EALd,MAOb,OAAO,eAAC,IAAMW,SAAP,WACL,cAAC,EAAD,CAAQb,QAASA,IAChB0B,GAAY,cAAC,EAAD,IACZE,GAAY,cAAC,EAAD,IACZD,GAAW,cAAC,EAAD,QC5BDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjL,MAAK,YAAkD,IAA/CkL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlL,SAASC,eAAe,SAM1BuK,M","file":"static/js/main.e5425ea7.chunk.js","sourcesContent":["\r\nconst getRhymesFromAPI=(word)=>{\r\n    var rhymes=[];\r\n    fetch(\"https://api.datamuse.com/words?rel_rhy=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (let i=0;i<res.length;i++){\r\n                rhymes.push(res[i].word);\r\n            }\r\n            return rhymes;\r\n        })\r\n        .then((res)=>{\r\n\r\n            //empty rhymes data from previous request\r\n            const col2=document.getElementById('rhymesDisplayCol2');\r\n            col2.textContent=\"\";\r\n            const col1=document.getElementById('rhymesDisplayCol1');\r\n            col1.textContent=\"\";\r\n\r\n            //if no matches found, display shruggy dude\r\n            if (res.length===0){\r\n                document.getElementById('rhymesDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n\r\n            //else, display all rhymes in two cols of 5\r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const rhymeData=document.createElement('div');\r\n                rhymeData.classList.add('wordData');\r\n                rhymeData.textContent=res[i];\r\n                col1.appendChild(rhymeData);\r\n            }\r\n            \r\n            for (var i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const rhymeData=document.createElement('div');\r\n                rhymeData.classList.add('wordData');\r\n                rhymeData.textContent=res[i];\r\n                col2.appendChild(rhymeData);\r\n            }   \r\n        });\r\n}\r\nconst getSpelledLikeFromAPI=(word)=>{\r\n    var sp=[];\r\n    fetch(\"https://api.datamuse.com/words?sp=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (let i=0;i<res.length;i++){\r\n                sp.push(res[i].word);\r\n            }\r\n            return sp;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('spelledLikeDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('spelledLikeDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('spelledLikeDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n            \r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const rhymeData=document.createElement('div');\r\n                rhymeData.classList.add('wordData');\r\n                rhymeData.textContent=res[i];\r\n                col1.appendChild(rhymeData);\r\n            }\r\n            \r\n            for (var i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const rhymeData=document.createElement('div');\r\n                rhymeData.classList.add('wordData');\r\n                rhymeData.textContent=res[i];\r\n                col2.appendChild(rhymeData);\r\n            }\r\n        });\r\n}\r\nconst getSoundsLikeFromAPI=(word)=>{\r\n    var sl=[];\r\n    fetch(\"https://api.datamuse.com/words?sl=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                sl.push(res[i].word);\r\n            }\r\n            return sl;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('soundsLikeDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('soundsLikeDisplayCol2');\r\n            col2.textContent=\"\";\r\n            if (res.length===0){\r\n                document.getElementById('soundsLikeDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n\r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\nconst getRelatedFromAPI=(word)=>{\r\n    var data=[];\r\n    fetch(\"https://api.datamuse.com/words?ml=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                data.push(res[i].word);\r\n            }\r\n            return data;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('relatedDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('relatedDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('relatedDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n            \r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\nconst getSynonymsFromAPI=(word)=>{\r\n    var data=[];\r\n    fetch(\"https://api.datamuse.com/words?rel_syn=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                data.push(res[i].word);\r\n            }\r\n            return data;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('synonymsDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('synonymsDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('synonymsDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n            \r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\nconst getAntonymsFromAPI=(word)=>{\r\n    var data=[];\r\n    fetch(\"https://api.datamuse.com/words?rel_ant=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                data.push(res[i].word);\r\n            }\r\n            return data;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('antonymsDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('antonymsDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('antonymsDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n\r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\nconst getApproxRhymesFromAPI=(word)=>{\r\n    var data=[];\r\n    fetch(\"https://api.datamuse.com/words?rel_nry=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                data.push(res[i].word);\r\n            }\r\n            return data;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('approxRhymesDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('approxRhymesDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('approxRhymesDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n            \r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\nconst getConsonantMatchFromAPI=(word)=>{\r\n    var data=[];\r\n    fetch(\"https://api.datamuse.com/words?rel_cns=\"+word)\r\n        .then(res=>res.json())\r\n        .then((res)=>{\r\n            for (var i=0;i<res.length;i++){\r\n                data.push(res[i].word);\r\n            }\r\n            return data;\r\n        })\r\n        .then((res)=>{\r\n\r\n            const col1=document.getElementById('consonantMatchDisplayCol1');\r\n            col1.textContent=\"\";\r\n            const col2=document.getElementById('consonantMatchDisplayCol2');\r\n            col2.textContent=\"\";\r\n\r\n            if (res.length===0){\r\n                document.getElementById('consonantMatchDisplayNoMatches').classList.remove('hidden');\r\n                return;\r\n            }\r\n            \r\n            for (let i=0;i<5;i++){\r\n                if (i===res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col1.appendChild(wordData);\r\n            }\r\n            \r\n            for (let i=5;i<10;i++){\r\n                if (i>=res.length)\r\n                    break;\r\n\r\n                const wordData=document.createElement('div');\r\n                wordData.classList.add('wordData');\r\n                wordData.textContent=res[i];\r\n                col2.appendChild(wordData);\r\n            }\r\n        });\r\n}\r\n\r\nconst hideAllShruggers=()=>{\r\n    const allShruggers=document.getElementsByClassName('noMatches');\r\n    for (var i=0;i<allShruggers.length;i++){\r\n        allShruggers[i].classList.add('hidden');\r\n    }\r\n}\r\n\r\nconst getWordAndSendAPIReq=(event)=>{\r\n\r\n    event.target.classList.add('italic');\r\n    event.target.addEventListener('mouseleave',(event)=>{\r\n        event.target.classList.remove('italic');\r\n    })\r\n\r\n    const word=event.target.textContent;\r\n    hideAllShruggers();\r\n    getRhymesFromAPI(word);\r\n    getSpelledLikeFromAPI(word);\r\n    getSoundsLikeFromAPI(word);\r\n    getRelatedFromAPI(word);\r\n    getSynonymsFromAPI(word);\r\n    getAntonymsFromAPI(word);\r\n    getApproxRhymesFromAPI(word);\r\n    getConsonantMatchFromAPI(word);\r\n}\r\nconst sendAPIReq=(word)=>{\r\n    hideAllShruggers();\r\n    getRhymesFromAPI(word);\r\n    getSpelledLikeFromAPI(word);\r\n    getSoundsLikeFromAPI(word);\r\n    getRelatedFromAPI(word);\r\n    getSynonymsFromAPI(word);\r\n    getAntonymsFromAPI(word);\r\n    getApproxRhymesFromAPI(word);\r\n    getConsonantMatchFromAPI(word);\r\n}\r\n\r\n\r\nconst keyboardFunctionalityWordLab=(event)=>{\r\n\r\n    //loading API functionality to first word\r\n    document.getElementsByClassName('word')[0].addEventListener('mouseenter',getWordAndSendAPIReq);\r\n\r\n    if (event.key==='Shift' || event.key==='CapsLock' || event.key===\"ArrowLeft\" || event.key===\"ArrowRight\" || event.key===\"ArrowUp\" || event.key===\"ArrowDown\"){\r\n        return;\r\n    }\r\n\r\n    //if key===enter, create new line with empty word, append at bottom of textEditor\r\n    if (event.code==='Enter'){\r\n        //safety measure for long pressing enter\r\n        const lines=document.getElementsByClassName('verseLine');\r\n        const lastLine=lines[lines.length-1];\r\n        const lastLineWords=lastLine.childNodes;\r\n        \r\n        if (lastLineWords.length===1 && lastLineWords[0].textContent===\"\"){\r\n            return;\r\n        }\r\n\r\n        const line=document.createElement('div');\r\n        line.classList.add('verseLine');\r\n        const word=document.createElement('div');\r\n        word.classList.add('word');\r\n        word.addEventListener('mouseenter',getWordAndSendAPIReq);\r\n        line.appendChild(word);\r\n        document.getElementById('pageBody').appendChild(line);\r\n\r\n        window.scrollTo(0,document.body.scrollHeight);\r\n        return;\r\n    }\r\n    //if key===space, create new word div, append it to last line\r\n    if (event.code==='Space'){\r\n\r\n        event.preventDefault();\r\n\r\n        //safety measure for long pressing spaceBar\r\n        const words=document.getElementsByClassName('word');\r\n        var lastWordText=words[words.length-1].textContent;\r\n        if (lastWordText===\"\"){\r\n            return;\r\n        }\r\n        const lastChar=lastWordText[lastWordText.length-1];\r\n        switch(lastChar){\r\n            case '.':case ',':case \":\":case \";\":case \"!\":\r\n                lastWordText=lastWordText.slice(0,-1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //fetch data from last typed word\r\n        sendAPIReq(lastWordText);\r\n\r\n        const word=document.createElement('div');\r\n        word.classList.add('word');\r\n        word.addEventListener('mouseenter',getWordAndSendAPIReq);\r\n        const lines=document.getElementsByClassName('verseLine');\r\n        lines[lines.length-1].appendChild(word);\r\n        return;\r\n    }\r\n    //if key===backspace do something idk what yet\r\n    if (event.code==='Backspace'){\r\n\r\n        const words=document.getElementsByClassName('word');\r\n        const lastWord=words[words.length-1];\r\n        const lastWordText=lastWord.textContent;\r\n        var reducedWord=\"\";\r\n        for (var i=0;i<lastWordText.length-1;i++){\r\n            reducedWord+=lastWordText[i];\r\n        }\r\n\r\n        if (reducedWord===\"\" && words.length!==1){\r\n            lastWord.remove();\r\n            var allLines=document.getElementsByClassName('verseLine');\r\n            const lastLineChildren=allLines[allLines.length-1].childNodes;\r\n            if (allLines.length>1 && lastLineChildren.length===0){\r\n                allLines[allLines.length-1].remove();\r\n            }\r\n        }else{\r\n            lastWord.textContent=reducedWord;\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    //for any other char, add char to last word. I need a filter to process only nums and letters\r\n    const words=document.getElementsByClassName('word');\r\n    words[words.length-1].textContent=words[words.length-1].textContent+event.key;\r\n    \r\n}\r\n\r\nexport default keyboardFunctionalityWordLab","\r\nconst keyboardFunctionalityFlow=(event)=>{\r\n\r\n    if (event.key==='Shift' || event.key==='CapsLock' || event.key===\"ArrowLeft\" || event.key===\"ArrowRight\" || event.key===\"ArrowUp\" || event.key===\"ArrowDown\"){\r\n        return;\r\n    }\r\n\r\n    //if key===enter, create new line with empty word, append at bottom of textEditor\r\n    if (event.code==='Enter'){\r\n        //safety measure for long pressing enter\r\n        const lines=document.getElementsByClassName('flowVerseLine');\r\n        const lastLine=lines[lines.length-1];\r\n        const lastLineWords=lastLine.childNodes;\r\n        \r\n        if (lastLineWords.length===1 && lastLineWords[0].textContent===\"\"){\r\n            return;\r\n        }\r\n\r\n        const line=document.createElement('div');\r\n        line.classList.add('flowVerseLine');\r\n        const word=document.createElement('div');\r\n        word.classList.add('flowWord');\r\n        line.appendChild(word);\r\n        document.getElementById('flowPageBody').appendChild(line);\r\n\r\n\r\n        var objDiv = document.getElementById('flowPageBody');\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n\r\n        return;\r\n    }\r\n    //if key===space, create new word div, append it to last line\r\n    if (event.code==='Space'){\r\n\r\n        event.preventDefault();\r\n\r\n        //safety measure for long pressing spaceBar\r\n        const words=document.getElementsByClassName('flowWord');\r\n        var lastWordText=words[words.length-1].textContent;\r\n        if (lastWordText===\"\"){\r\n            return;\r\n        }\r\n        const lastChar=lastWordText[lastWordText.length-1];\r\n        switch(lastChar){\r\n            case '.':case ',':case \":\":case \";\":case \"!\":\r\n                lastWordText=lastWordText.slice(0,-1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const word=document.createElement('div');\r\n        word.classList.add('flowWord');\r\n        const lines=document.getElementsByClassName('flowVerseLine');\r\n        lines[lines.length-1].appendChild(word);\r\n        return;\r\n    }\r\n    //if key===backspace do something idk what yet\r\n    if (event.code==='Backspace'){\r\n\r\n        const words=document.getElementsByClassName('flowWord');\r\n        const lastWord=words[words.length-1];\r\n        const lastWordText=lastWord.textContent;\r\n        var reducedWord=\"\";\r\n        for (var i=0;i<lastWordText.length-1;i++){\r\n            reducedWord+=lastWordText[i];\r\n        }\r\n\r\n        if (reducedWord===\"\" && words.length!==1){\r\n            lastWord.remove();\r\n            var allLines=document.getElementsByClassName('flowVerseLine');\r\n            const lastLineChildren=allLines[allLines.length-1].childNodes;\r\n            if (allLines.length>1 && lastLineChildren.length===0){\r\n                allLines[allLines.length-1].remove();\r\n            }\r\n        }else{\r\n            lastWord.textContent=reducedWord;\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    //for any other char, add char to last word. I need a filter to process only nums and letters\r\n    const words=document.getElementsByClassName('flowWord');\r\n    words[words.length-1].textContent=words[words.length-1].textContent+event.key;\r\n    \r\n}\r\n\r\nexport default keyboardFunctionalityFlow","const verseBank=[\r\n    \"Glock nineteen, my enemies slam the ground like a foam mattress,\",\r\n    \"I got a double stack Big Mac and a rack of Wendy's tendies,\",\r\n    \"The good, the bad, Genghis Khan, gang of hoes riding mountain goats\",\r\n    \"Grilled cheese, turkey burgers, my ass makes deep fried ramen\",\r\n    \"Hoes ain't worth the coke, so I always give them salt to snort\",\r\n    \"Money moves. Refinanced two percent APR mortgage. Retirement king\"\r\n]\r\n\r\nexport default verseBank","import verseBank from './verseBank.js'\r\n\r\nvar gameFunctionality={\r\n    isWordsMoving:false,\r\n    firstVerse:'',\r\n    firstVerseChar:0,\r\n    intervalCode:0,\r\n    moveIntervalCode:0,\r\n    getLastWord(){\r\n        const allWords=document.getElementsByClassName('flowWord');\r\n        return allWords[allWords.length-1].textContent;\r\n    },\r\n    typeFirstVerse(){\r\n        gameFunctionality.intervalCode=setInterval(()=>{\r\n            while(gameFunctionality.firstVerseChar<gameFunctionality.firstVerse.length){\r\n                if (gameFunctionality.firstVerse[gameFunctionality.firstVerseChar]===\" \"){\r\n                    const evt = new KeyboardEvent('keydown', {code:\"Space\"}); \r\n                    window.dispatchEvent(evt);\r\n                }else{\r\n                    const evt = new KeyboardEvent('keydown', {key:gameFunctionality.firstVerse[gameFunctionality.firstVerseChar]}); \r\n                    window.dispatchEvent(evt);\r\n                }\r\n                \r\n                gameFunctionality.firstVerseChar++;\r\n                break; \r\n            }\r\n            if (gameFunctionality.firstVerseChar==gameFunctionality.firstVerse.length){\r\n                var evt = new KeyboardEvent('keydown', {code:'Enter'}); \r\n                window.dispatchEvent(evt);\r\n                clearInterval(gameFunctionality.intervalCode);\r\n                gameFunctionality.firstVerseChar=0;\r\n                gameFunctionality.getRootRhymes(); \r\n            }\r\n        },50)\r\n        \r\n        \r\n    },\r\n    eraseLastWord(){\r\n        var allWords=document.getElementsByClassName('flowWord');\r\n        allWords[allWords.length-1].textContent='';\r\n    },\r\n    getLongWords(){\r\n        var allWords=document.getElementsByClassName('flowWord');\r\n        var longWords=[];\r\n        for (var i=0;i<allWords.length;i++){\r\n            if (allWords[i].textContent.length>=4){\r\n                longWords.push(allWords[i]);\r\n            }\r\n        }\r\n        return longWords;\r\n    },\r\n    shuffleArr(arr){\r\n        for (var i=0;i<arr.length;i++){\r\n            const num=Math.round(Math.random()*(arr.length-1));\r\n            var temp=arr[i];\r\n            arr[i]=arr[num];\r\n            arr[num]=temp;\r\n        }\r\n        return arr;\r\n    },\r\n    async getAPIData(type,wordPtr){\r\n\r\n        switch(type){\r\n            case \"rhyme\":\r\n                type=\"rel_rhy=\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        var data=[];\r\n        fetch(\"https://api.datamuse.com/words?\"+type+wordPtr.textContent)\r\n            .then(res=>res.json())\r\n            .then((res)=>{\r\n                for (let i=0;i<res.length;i++){\r\n                    data.push(res[i].word);\r\n                }\r\n                return data;\r\n            })\r\n            .then((res)=>{\r\n                if (res.length>5){\r\n                    //if all lanes are full...\r\n                    if (document.getElementsByClassName('rhymeLane').length>=3)\r\n                        return;\r\n\r\n                    //avoiding duplicate root words...\r\n                    var allLanes=document.getElementsByClassName('rhymeLane');\r\n                    for (var i=0;i<allLanes.length;i++){\r\n                        if (allLanes[i].childNodes[0].textContent===wordPtr.textContent)\r\n                            return;\r\n                    }\r\n\r\n                    //choosing a radnom set of rhymes to include in stack\r\n                    const num=Math.round(Math.random()*4)+3;\r\n                    var rhymeWords=[];\r\n                    for (var i=0;i<num;i++){\r\n                        rhymeWords.push(res[i]);\r\n                    }\r\n                    \r\n                    //creating n appending root rhyme on HUD left end\r\n                    const containerDiv=document.createElement('div');\r\n                    containerDiv.classList.add('rhymeLane');\r\n                    const wordDiv=document.createElement('div');\r\n                    wordDiv.classList.add('rootWord');\r\n                    wordDiv.textContent=wordPtr.textContent;\r\n                    const lengthDiv=document.createElement('div');\r\n                    lengthDiv.classList.add('rootWord');\r\n                    lengthDiv.textContent=rhymeWords.length;\r\n                    containerDiv.appendChild(wordDiv)\r\n                    containerDiv.appendChild(lengthDiv);\r\n                    document.getElementById('rhymeLanes').appendChild(containerDiv);\r\n\r\n                    const lanes=document.getElementsByClassName('rhymeLane');\r\n                    if (lanes.length===1){\r\n                        containerDiv.classList.add('greenLane');\r\n                        wordPtr.classList.add('greenLane');\r\n                    }else if (lanes.length===2){\r\n                        containerDiv.classList.add('redLane');\r\n                        wordPtr.classList.add('redLane');\r\n                    }else if (lanes.length===3){\r\n                        containerDiv.classList.add('blueLane');\r\n                        wordPtr.classList.add('blueLane');\r\n                    }\r\n\r\n                    //creating n appending rhyme w/ root rhyme on stack\r\n                    for (var i=0;i<rhymeWords.length;i++){\r\n                        const rhymePair=document.createElement('div');\r\n                        rhymePair.classList.add('stackPair');\r\n                        const stackRhyme=document.createElement('div');\r\n                        stackRhyme.classList.add('stackRhyme');\r\n                        stackRhyme.textContent=rhymeWords[i];\r\n                        const stackRoot=document.createElement('div');\r\n                        stackRoot.classList.add('stackRoot');\r\n                        stackRoot.textContent=wordPtr.textContent;\r\n\r\n                        rhymePair.appendChild(stackRhyme);\r\n                        rhymePair.appendChild(stackRoot);\r\n                        document.getElementById('rhymesStack').appendChild(rhymePair);\r\n                    }\r\n\r\n                    wordPtr.classList.add('bold');\r\n\r\n                }\r\n            })\r\n    },\r\n    getRootRhymes(){\r\n        var longWords=gameFunctionality.getLongWords();\r\n        longWords=gameFunctionality.shuffleArr(longWords);\r\n        for (var i=0;i<longWords.length;i++){\r\n            gameFunctionality.getAPIData(\"rhyme\",longWords[i]);                \r\n        }\r\n    },\r\n    moveFromStackToLane(){\r\n        var rhymePairs=document.getElementsByClassName('stackPair');\r\n        if (rhymePairs.length===0){\r\n            clearInterval(gameFunctionality.intervalCode);\r\n            return;\r\n        }\r\n\r\n        //pop random word pair form stack\r\n        const num=Math.round(Math.random()*(rhymePairs.length-1));\r\n        const rhyme=rhymePairs[num].childNodes[0].textContent;\r\n        const root=rhymePairs[num].childNodes[1].textContent;\r\n        rhymePairs[num].remove();\r\n\r\n        //find out which lane it belongs to, append it to right lane\r\n        const rhymeLanes=document.getElementsByClassName('rhymeLane');\r\n        for (var i=0;i<rhymeLanes.length;i++){\r\n            if (rhymeLanes[i].childNodes[0].textContent===root){\r\n                var freq=parseInt(rhymeLanes[i].childNodes[1].textContent,10)-1;\r\n                rhymeLanes[i].childNodes[1].textContent=freq;\r\n                const runningWord=document.createElement('div');\r\n                runningWord.textContent=rhyme;\r\n                runningWord.classList.add('runningWord');\r\n                rhymeLanes[i].appendChild(runningWord);\r\n\r\n                //adding lane color to word\r\n                var laneColor=\"\";\r\n                if (rhymeLanes[i].classList.contains('redLane')){\r\n                    laneColor='redLane';\r\n                }else if (rhymeLanes[i].classList.contains('blueLane')){\r\n                    laneColor='blueLane';\r\n                }else if (rhymeLanes[i].classList.contains('greenLane')){\r\n                    laneColor='greenLane';\r\n                }\r\n                runningWord.classList.add(laneColor);\r\n                runningWord.setAttribute('laneColor',laneColor);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    moveWords(){\r\n        if (gameFunctionality.isWordsMoving){\r\n            return;\r\n        }else{\r\n            gameFunctionality.isWordsMoving=true;\r\n        }\r\n\r\n        gameFunctionality.moveIntervalCode=setInterval(()=>{\r\n            var allRunners=document.getElementsByClassName('runningWord');\r\n            var i=0;\r\n            while(i<allRunners.length){\r\n                var posLeft=parseInt(allRunners[i].offsetLeft,10);\r\n                var posRight=1200-posLeft-allRunners[i].offsetWidth;\r\n                if (posRight<=40){\r\n                    allRunners[i].remove();\r\n                    continue;\r\n                }\r\n                posLeft+=1;\r\n                allRunners[i].style.left=posLeft+'px';\r\n                i++;\r\n            }\r\n            //if you have emptied stack and all runningWords, reload root rhymes and stack\r\n            const stackPairs=document.getElementsByClassName('stackPair');\r\n            if (allRunners.length===0 && stackPairs.length===0){\r\n                clearInterval(gameFunctionality.moveIntervalCode);\r\n                gameFunctionality.isWordsMoving=false;\r\n                gameFunctionality.reloadRootRhymesAndStack();\r\n            }\r\n        },20)\r\n    },\r\n    reloadRootRhymesAndStack(){\r\n        //empty all lanes\r\n        var lanes=document.getElementsByClassName('rhymeLane');\r\n        while(lanes.length>0){\r\n            lanes[0].remove();\r\n        }\r\n\r\n        //clear movefromstacktolane interval\r\n        clearInterval(gameFunctionality.intervalCode);\r\n\r\n        //load new rhymes in lanes and stack, await a bit, then start moving them move stack to lanes\r\n        gameFunctionality.getRootRhymes();\r\n        setTimeout(()=>{\r\n            gameFunctionality.startWordSpawnInterval();\r\n            gameFunctionality.moveWords();\r\n        },3000);\r\n    },\r\n    startWordSpawnInterval(){\r\n        //no delay for first word\r\n        gameFunctionality.moveFromStackToLane();\r\n        gameFunctionality.moveWords();\r\n\r\n        gameFunctionality.intervalCode=setInterval(()=>{\r\n            const num=Math.round(Math.random()*2)*1000;\r\n            setTimeout(()=>{\r\n                const stackPair=document.getElementsByClassName('stackPair');\r\n                if (stackPair.length===0){\r\n                    clearInterval(gameFunctionality.intervalCode);\r\n                    gameFunctionality.intervalCode=0;\r\n                    return;\r\n                }\r\n\r\n                gameFunctionality.moveFromStackToLane();\r\n            },num)\r\n        },3000)\r\n    },\r\n    listener(event){\r\n        const lastWord=gameFunctionality.getLastWord();\r\n        if (lastWord==='LOAD'){\r\n            gameFunctionality.eraseLastWord();\r\n            const num=Math.round(Math.random()*(verseBank.length-1));\r\n            gameFunctionality.firstVerse=verseBank[num];\r\n            gameFunctionality.typeFirstVerse();\r\n        }\r\n        if (lastWord==='GO'){\r\n            gameFunctionality.eraseLastWord();\r\n            gameFunctionality.startWordSpawnInterval();\r\n        }\r\n        const runningWords=document.getElementsByClassName('runningWord');\r\n        for (var i=0;i<runningWords.length;i++){\r\n            if (lastWord===runningWords[i].textContent){\r\n                //getting color lane from running word, adding it to the word on editor\r\n                const laneColor=runningWords[i].getAttribute('laneColor');\r\n                const allWords=document.getElementsByClassName('flowWord');\r\n                allWords[allWords.length-1].classList.add(laneColor);\r\n                allWords[allWords.length-1].classList.add('bold');\r\n\r\n                //deleting running word from HUD\r\n                runningWords[i].remove();\r\n            }\r\n        }\r\n\r\n\r\n        \r\n    },\r\n    loadListener(){\r\n        window.addEventListener('keydown',gameFunctionality.listener);\r\n    },\r\n    resetEverything(){\r\n        clearInterval(gameFunctionality.intervalCode);\r\n        clearInterval(gameFunctionality.moveIntervalCode);\r\n        window.removeEventListener(\"keydown\",gameFunctionality.listener);\r\n        gameFunctionality.isWordsMoving=false;\r\n        gameFunctionality.firstVerse=\"\";\r\n        gameFunctionality.firstVerseChar=0;\r\n    }\r\n}\r\n\r\nexport default gameFunctionality","import React, { useEffect } from 'react'\r\nimport keyboardFunctionalityWordLab from './keyboardFunctionalityWordLab'\r\nimport keyboardFunctionalityFlow from './keyboardFunctionalityFlow'\r\nimport gameFunctionality from './gameFunctionality'\r\nimport './TextEditor.css'\r\n\r\nconst TextEditor=()=>{\r\n    useEffect(()=>{\r\n\r\n        gameFunctionality.resetEverything();\r\n        window.removeEventListener('keydown',keyboardFunctionalityWordLab);\r\n        window.removeEventListener('keydown',keyboardFunctionalityFlow);\r\n\r\n\r\n        //removes keypress event listener from window then adds to prevent double functionality\r\n        window.addEventListener('keydown',keyboardFunctionalityWordLab);\r\n        \r\n    })\r\n    return <div id='textEditorMain'>\r\n        <div id='instructions'>\r\n            <span style={{fontWeight:'bold',display:'block',fontSize:'25px'}}>INSTRUCTIONS</span>\r\n            1. Select up to 3 rhyming options from the options bar above. <br/>\r\n            2. Every time you hit the spacebar, rhymes are shown for the last typed word. <br/>\r\n            3. Hover your mouse over any word you've typed to get its rhymes.\r\n        </div>\r\n        <div id='pageBody'>\r\n            <div className='verseLine'>\r\n                <div className='word'></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default TextEditor","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport {FaArrowAltCircleUp,FaArrowAltCircleDown} from 'react-icons/fa'\r\nimport \"./HUD.css\"\r\n\r\nconst chooseMode=(mode)=>{\r\n    var clickedBtn=document.getElementsByClassName('clickedBtn');\r\n    const isClicked=document.getElementById(mode).classList.contains('clickedBtn');\r\n    //if a fourth btn is about to be selected, unselect some clicked btn\r\n    if (clickedBtn.length===3 && !isClicked){\r\n        var id=clickedBtn[0].getAttribute('id');\r\n        id+='Display';\r\n        document.getElementById(id).classList.toggle('hidden');\r\n        clickedBtn[0].classList.remove('clickedBtn');\r\n    }\r\n    document.getElementById(mode).classList.toggle('clickedBtn');\r\n    const displayId=mode+\"Display\";\r\n    document.getElementById(displayId).classList.toggle('hidden');\r\n\r\n    document.getElementById(mode).blur();\r\n}\r\n\r\nconst toggleHUD=()=>{\r\n\r\n    document.getElementById('upArrow').classList.toggle('hidden');\r\n    document.getElementById('downArrow').classList.toggle('hidden');\r\n    document.getElementById('HUD').classList.toggle('up');\r\n    document.getElementById('rollHUDBtn').blur();\r\n}\r\n\r\nconst NoMatches=(props)=>{\r\n\r\n    return <div className='noMatches hidden' id={props.id}>\r\n        <span style={{fontSize:'20px'}}>NO MATCHES FOUND</span><br/>\r\n        ¯\\_(ツ)_/¯\r\n    </div>\r\n}\r\n\r\nconst HUD=()=>{\r\n    return <div id='HUD'>\r\n        <div className='HUDSection' id='rhyDisplay'>\r\n            <div className='sectionTitle'>RHYMES</div>\r\n            <div id='rhymesDisplayCol1' className='displayCol'></div>\r\n            <div id='rhymesDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='rhymesDisplayNoMatches'/>\r\n        </div>\r\n        <div className='HUDSection' id='appRhyDisplay'>\r\n            <div className='sectionTitle'>APPROX RHYMES</div>\r\n            <div id='approxRhymesDisplayCol1' className='displayCol'></div>\r\n            <div id='approxRhymesDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='approxRhymesDisplayNoMatches'/>\r\n        </div>\r\n        <div className='HUDSection' id='slDisplay'>\r\n            <div className='sectionTitle'>SOUNDS LIKE</div>\r\n            <div id='soundsLikeDisplayCol1' className='displayCol'></div>\r\n            <div id='soundsLikeDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='soundsLikeDisplayNoMatches'/>\r\n        </div> \r\n        <div className='HUDSection hidden' id='splDisplay'>\r\n            <div className='sectionTitle'>SPELLED LIKE</div>\r\n            <div id='spelledLikeDisplayCol1' className='displayCol'></div>\r\n            <div id='spelledLikeDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='spelledLikeDisplayNoMatches'/>\r\n        </div>       \r\n        <div className='HUDSection hidden' id='relDisplay'>\r\n            <div className='sectionTitle'>RELATED</div>\r\n            <div id='relatedDisplayCol1' className='displayCol'></div>\r\n            <div id='relatedDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='relatedDisplayNoMatches'/>\r\n        </div>\r\n        <div className='HUDSection hidden' id='synDisplay'>\r\n            <div className='sectionTitle'>SYNONYMS</div>\r\n            <div id='synonymsDisplayCol1' className='displayCol'></div>\r\n            <div id='synonymsDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='synonymsDisplayNoMatches'/>\r\n        </div>\r\n        <div className='HUDSection hidden' id='antDisplay'>\r\n            <div className='sectionTitle'>ANTONYMS</div>\r\n            <div id='antonymsDisplayCol1' className='displayCol'></div>\r\n            <div id='antonymsDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='antonymsDisplayNoMatches'/>\r\n        </div>\r\n        <div className='HUDSection hidden' id='cmDisplay'>\r\n            <div className='sectionTitle'>CONSONANT MATCH</div>\r\n            <div id='consonantMatchDisplayCol1' className='displayCol'></div>\r\n            <div id='consonantMatchDisplayCol2' className='displayCol'></div>\r\n            < NoMatches id='consonantMatchDisplayNoMatches'/>\r\n        </div>\r\n        <div id='btnsBar'>\r\n            <Button variant='outline-light' className='optionsBtn clickedBtn' id='rhy' onClick={()=>{chooseMode('rhy')}}>Rhymes</Button>\r\n            <Button variant='outline-light' className='optionsBtn clickedBtn' id='appRhy' onClick={()=>{chooseMode('appRhy')}}>Approx. Rhymes</Button>\r\n            <Button variant='outline-light' className='optionsBtn clickedBtn' id='sl' onClick={()=>{chooseMode('sl')}}>Sounds like</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='spl' onClick={()=>{chooseMode('spl')}}>Spelled like</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='rel' onClick={()=>{chooseMode('rel')}}>Related</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='syn' onClick={()=>{chooseMode('syn')}}>Synonyms</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='ant' onClick={()=>{chooseMode('ant')}}>Antonyms</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='cm' onClick={()=>{chooseMode('cm')}}>Consonant Match</Button>\r\n            <Button variant='outline-light' className='optionsBtn' id='rollHUDBtn' onClick={toggleHUD} ><FaArrowAltCircleUp id='upArrow' /><FaArrowAltCircleDown id='downArrow' className='hidden'/></Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default HUD","export default __webpack_public_path__ + \"static/media/sidewaysGold.e4d8b74e.PNG\";","import React from 'react'\r\nimport freestyleForgeLogo from '../images/sidewaysGold.PNG'\r\nimport {Button} from 'react-bootstrap'\r\nimport './Navbar.css'\r\n\r\nconst Navbar=(props)=>{\r\n    const [setShowHome,setShowLab,setShowFlow]=props.setters;\r\n\r\n    const changeSite=(key)=>{\r\n        setShowHome(false);\r\n        setShowLab(false);\r\n        setShowFlow(false);\r\n\r\n        //removes focus from navbar btns such that spacebar and enter wont trigger click events\r\n        const btns=document.getElementsByClassName('navbarBtn');\r\n        for (var i=0;i<btns.length;i++){\r\n            btns[i].blur();\r\n        }\r\n\r\n        switch(key){\r\n            case 'home':\r\n                setShowHome(true);\r\n                break;\r\n            case 'lab':\r\n                setShowLab(true);\r\n                break;\r\n            case 'flow':\r\n                setShowFlow(true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return <div id='navbar'>\r\n        <img src={freestyleForgeLogo} alt='' id='navbarLogo'/>\r\n        <div id='navbarBtns'>\r\n            <Button variant='outline-light' className='navbarBtn' onClick={()=>{changeSite('home')}}>Home</Button>\r\n            <Button variant='outline-light' className='navbarBtn' id='navbarFlow' onClick={()=>{changeSite('flow')}}>Fluid Flow</Button>\r\n            <Button variant='outline-light' className='navbarBtn' id='navbarLab' onClick={()=>{changeSite('lab')}}>Word Lab</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/another.00798a05.PNG\";","export default __webpack_public_path__ + \"static/media/wordLab.5411b181.PNG\";","export default __webpack_public_path__ + \"static/media/fluidFlow.4eca1092.PNG\";","import React, { useEffect } from 'react'\r\nimport freestyleLog from '../images/another.PNG'\r\nimport wordLabImg from '../images/wordLab.PNG'\r\nimport fluidFLowImg from '../images/fluidFlow.PNG'\r\nimport './Home.css'\r\n\r\nconst Home=()=>{\r\n\r\n    const openComponent=(type)=>{\r\n        switch(type){\r\n            case 'fluidFlow':\r\n                document.getElementById('navbarFlow').click();\r\n                break;\r\n            case 'wordLab':\r\n                document.getElementById('navbarLab').click();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        //title/body animation on game tags\r\n        const appDemos=document.getElementsByClassName('appDemo');\r\n        appDemos[0].addEventListener('mouseenter',()=>{\r\n            document.getElementById('wordLabCarousel').classList.add('scrollToBottom');\r\n        })\r\n        appDemos[0].addEventListener('mouseleave',()=>{\r\n            document.getElementById('wordLabCarousel').classList.remove('scrollToBottom');\r\n        })\r\n        appDemos[1].addEventListener('mouseenter',()=>{\r\n            document.getElementById('fluidFlowCarousel').classList.add('scrollToBottom');\r\n        })\r\n        appDemos[1].addEventListener('mouseleave',()=>{\r\n            document.getElementById('fluidFlowCarousel').classList.remove('scrollToBottom');\r\n        })\r\n    })\r\n\r\n    return <React.Fragment>\r\n        <div id='leftHalf'>\r\n            <img src={freestyleLog} alt='' id='homeSiteLogo'/>\r\n        </div>\r\n        <div id='rightHalf'>\r\n            <div id='introParagraph'>\r\n                Forge that diction intuition, <br/>a versatile vernacular, <br/>fuel for thoughts that flow <br/>to the beat of a keyboard's <br/>freed words.\r\n            </div>\r\n            <div className='appDemo' onClick={()=>{openComponent('wordLab')}}>\r\n                <img src={wordLabImg} alt='' className='demoImg' />\r\n                <div className='carousel' id='wordLabCarousel'>\r\n                    <div className='appDemoTitle'>WORD LAB</div>\r\n                    <div className='appDemoBody'>\r\n                        Develop your rhyming skills using our real-time rhyme generator. No time rush, no contraints. <br/>Rhyme as you please.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='appDemo' onClick={()=>{openComponent('fluidFlow')}}>\r\n                <img src={fluidFLowImg} alt='' className='demoImg' />\r\n                <div className='carousel' id='fluidFlowCarousel'>\r\n                    <div className='appDemoTitle'>FLUID FLOW</div>\r\n                    <div className='appDemoBody'>\r\n                        Improve your improv skills by stringing rhymes under pressure. <br/><br/>\r\n                        We give you the rhymes, you do the rest.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Home","import React, { useEffect } from 'react'\r\nimport keyboardFunctionalityFlow from './keyboardFunctionalityFlow.js'\r\nimport keyboardFunctionalityWordLab from './keyboardFunctionalityWordLab.js'\r\nimport gameFunctionality from './gameFunctionality'\r\n\r\nimport './FlowEditor.css'\r\n\r\nconst FlowEditor=()=>{\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        gameFunctionality.resetEverything();\r\n        window.removeEventListener('keydown',keyboardFunctionalityWordLab);\r\n        window.removeEventListener('keydown',keyboardFunctionalityFlow);\r\n\r\n\r\n        window.addEventListener('keydown',keyboardFunctionalityFlow);\r\n        gameFunctionality.loadListener();\r\n    })\r\n    return <div id='flowEditorMain'>\r\n        <div id='flowPageBody'>\r\n            <div id='flowInstructions'>\r\n                <span style={{fontWeight:'bold',display:'block',fontSize:'25px'}}>INSTRUCTIONS</span>\r\n                1. Type LOAD to load first verse and root rhymes. <br/>\r\n                2. On the screen above, each root rhyme will spawn new rhymes. Use these rhymes in your freestlye before they cross the red line.<br/>\r\n                3. Type GO to start game.\r\n            </div>\r\n            <div className='flowVerseLine'>\r\n                <div className='flowWord'></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default FlowEditor","import React, { useEffect } from 'react'\r\nimport './FlowHUD.css'\r\n\r\nconst FlowHUD=()=>{\r\n\r\n    return <React.Fragment>\r\n    <div id='flowHUD'>\r\n        <div id='rootRhymesEnd'>\r\n            <h2 style={{fontSize:'20px',textAlign:'center',marginBottom:'15px'}}>ROOT RHYMES</h2>\r\n        </div>\r\n        <div id='rhymeLanes'></div>\r\n        <div id='finishEnd'>\r\n        </div>\r\n    </div>\r\n    < div id='rhymesStack' className='hidden'>\r\n    </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default FlowHUD","import React, { useState } from 'react'\nimport TextEditor from './appFiles/TextEditor.js'\nimport HUD from './appFiles/HUD.js'\nimport Navbar from './appFiles/Navbar.js'\nimport Home from './appFiles/Home.js'\nimport FlowEditor from './appFiles/FlowEditor.js'\nimport FlowHUD from './appFiles/FlowHUD.js'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst WordLab=()=>{\n  return <React.Fragment>\n    < HUD />\n    < TextEditor />\n  </React.Fragment>\n}\n\nconst Homesite=()=>{\n  return <Home />\n}\n\nconst FluidFlow=()=>{\n  return <React.Fragment>\n    < FlowHUD />\n    < FlowEditor />\n  </React.Fragment>\n}\n\n\nfunction App() {\n  const [showHome,setShowHome]=useState(true);\n  const [showLab,setShowLab]=useState(false);\n  const [showFlow,setShowFlow]=useState(false);\n\n  const setters=[setShowHome,setShowLab,setShowFlow];\n\n  return <React.Fragment>\n    <Navbar setters={setters} />\n    {showHome && <Homesite />}\n    {showFlow && <FluidFlow />}\n    {showLab && <WordLab />}\n  </React.Fragment>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}